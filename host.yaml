general_options:
  #File name of the v1.0 J rom
  rom_file: "Zelda no Densetsu - Kamigami no Triforce (Japan).sfc"
  # set this to your (Q)Usb2Snes location if you want the MultiClient to attempt an auto start, does nothing if not found
  qusb2snes: "QUsb2Snes\\QUsb2Snes.exe"
#options for MultiServer
#null means nothing, for the server this means to default the value
#these overwrite command line arguments!
server_options:
  host: null
  port: 38281
  password: null
  multidata: null
  savefile: null
  disable_save: false
  loglevel: "info"
  #automatically forward the port that is used, then close that port after 24 hours
  port_forward: false
  #Disallow !getitem. Old /getitem cannot be blocked this way
  disable_item_cheat: false
  #Client hint system
  #points given to player for each acquired item
  location_check_points: 1
  #point cost to receive a hint via !hint for players
  hint_cost: 1000 #set to 0 if you want free hints
  #forfeit modes: "disabled" -> clients can't forfeit, "enabled" -> clients can always forfeit
  # "auto" -> automatic forfeit on goal completion, "goal" -> clients can forfeit after achieving their goal
  # "auto-enabled" -> automatic forfeit on goal completion and manual forfeit is also enabled
  # warning: only Berserker's Multiworld clients of version 2.1+ send game beaten information
  forfeit_mode: "goal"
  # !remaining handling, that tells a client which items remain in their pool
  # "enabled" -> client can always ask for remaining items
  # "disabled" -> client can never ask for remaining items
  # "goal" -> client can ask for remaining items after goal completion
  # warning: only Berserker's Multiworld clients of version 2.1+ send game beaten information
  remaining_mode: "goal"
#options for MultiMystery.py
multi_mystery_options:
#teams, however, note that there is currently no way to supply names for teams 2+ through MultiMystery
  teams: 1
#Where to place the resulting files
  output_path: "MultiMystery"
#location of your Enemizer CLI, available here: https://github.com/Bonta0/Enemizer/releases
  enemizer_path: "EnemizerCLI/EnemizerCLI.Core.exe"
#folder from which the player yaml files are pulled from
  player_files_path: "Players"
#meta file name, within players folder
  meta_file_path: "meta.yaml"
#automatically launches {player_name}.yaml's ROM file using the OS's default program once generation completes. (likely your emulator)
  #does nothing if the name is not found
  #example: player_name = "Berserker"
  player_name: "" # the hosts name
  #create a spoiler file
  create_spoiler: 1
  #Zip the resulting roms
  #0 -> Don't
  #1 -> Create a zip
  #2 -> Create a zip and delete the ROMs that will be in it, except the hosts (requires player_name to be set correctly)
  zip_roms: 0
  # zip diff files, 2-> delete the non-zipped one. Note that diffs are only created if they are placed in a zip.
  zip_diffs: 2
  #include the spoiler log in the zip, 2 -> delete the non-zipped one
  zip_spoiler: 0
  #include the multidata file in the zip, 2 -> delete the non-zipped one, which also means the server won't autostart
  zip_multidata: 0
  #zip algorithm to use. zip is recommended for patch files, 7z is recommended for roms. All of them get the job done.
  zip_format: 1 # 1 -> zip, 2 -> 7z, 3->bz2
  #create roms flagged as race roms
  race: 0